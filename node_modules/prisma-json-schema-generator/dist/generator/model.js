"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "getJSONSchemaModel", {
    enumerable: true,
    get: ()=>getJSONSchemaModel
});
const _properties = require("./properties");
function getRelationScalarFields(model) {
    return model.fields.flatMap((field)=>field.relationFromFields || []);
}
function getJSONSchemaModel(modelMetaData, transformOptions) {
    return (model)=>{
        const definitionPropsMap = model.fields.map((0, _properties.getJSONSchemaProperty)(modelMetaData, transformOptions));
        const propertiesMap = definitionPropsMap.map(([name, definition])=>[
                name,
                definition
            ]);
        const relationScalarFields = getRelationScalarFields(model);
        const propertiesWithoutRelationScalars = propertiesMap.filter((prop)=>relationScalarFields.findIndex((field)=>field === prop[0]) === -1);
        const properties = Object.fromEntries((transformOptions === null || transformOptions === void 0 ? void 0 : transformOptions.keepRelationScalarFields) === "true" ? propertiesMap : propertiesWithoutRelationScalars);
        const definition = {
            type: "object",
            properties
        };
        if (transformOptions.includeRequiredFields) {
            const required = definitionPropsMap.reduce((filtered, [name, , fieldMetaData])=>{
                if (fieldMetaData.required && fieldMetaData.isScalar && !fieldMetaData.hasDefaultValue) {
                    filtered.push(name);
                }
                return filtered;
            }, []);
            definition.required = required;
        }
        return [
            model.name,
            definition
        ];
    };
}
